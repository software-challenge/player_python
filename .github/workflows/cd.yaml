name: Continuous Deployment
'on':
  push:
    tags:
      - '*'
jobs:
  linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target:
          - x86_64
          - x86
          - aarch64
          - armv7
          - s390x
          - ppc64le
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        env:
          PYO3_USE_ABI3_FORWARD_COMPATIBILITY: '1'
        with:
          target: '${{ matrix.target }}'
          args: '--release --out dist --find-interpreter'
          sccache: 'true'
          manylinux: auto
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: linux-${{ matrix.target }}
          path: dist
  windows:
    runs-on: windows-latest
    strategy:
      matrix:
        target:
          - x64
          - x86
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          architecture: '${{ matrix.target }}'
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        env:
          PYO3_USE_ABI3_FORWARD_COMPATIBILITY: '1'
        with:
          target: '${{ matrix.target }}'
          args: '--release --out dist --find-interpreter'
          sccache: 'true'
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: windows-${{ matrix.target }}
          path: dist
  macos:
    runs-on: macos-latest
    strategy:
      matrix:
        target:
          - x86_64
          - aarch64
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        env:
          PYO3_USE_ABI3_FORWARD_COMPATIBILITY: '1'
        with:
          target: '${{ matrix.target }}'
          args: '--release --out dist --find-interpreter'
          sccache: 'true'
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: macos-${{ matrix.target }}
          path: dist
  release:
    permissions: write-all
    name: Release
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    needs: [linux, windows, macos]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          merge-multiple: true

      - name: Upload Release Asset
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          files: '*.whl'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  publish:
    name: Publish
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    needs: [linux, windows, macos]
    steps:
      - uses: actions/download-artifact@v4
        with:
          merge-multiple: true      
      - name: Publish to PyPI
        uses: PyO3/maturin-action@v1
        env:
          MATURIN_PYPI_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
        with:
          command: upload
          args: --non-interactive --skip-existing *
